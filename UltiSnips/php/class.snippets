snippet ab "abstract" w
abstract $0
endsnippet

snippet ac "abstract class" b
<?php
namespace ${1:Vendor};

abstract class `!p snip.rv=snip.basename`
{
	$0
}
endsnippet

snippet aci "abstract class implements" b
<?php
namespace ${1:Vendor};

abstract class `!p snip.rv=snip.basename` implements ${2:ArrayAccess}
{
	$0
}
endsnippet

snippet ac "abstract class extends" b
<?php
namespace ${1:Vendor};

abstract class `!p snip.rv=snip.basename` extends ${2:RuntimeException}
{
	$0
}
endsnippet

snippet acei "abstract class extends implements" b
<?php
namespace ${1:Vendor};

abstract class `!p snip.rv=snip.basename` extends ${2:RuntimeException} implements ${3:ArrayAccess}
{
	$0
}
endsnippet

snippet ce "class extends" b
<?php
namespace ${1:Vendor};

class `!p snip.rv=snip.basename` extends ${2:RuntimeException}
{
	$0
}
endsnippet

snippet cei "class extends implements" b
<?php
namespace ${1:Vendor};

class `!p snip.rv=snip.basename` extends ${2:RuntimeException} implements ${3:ArrayAccess}
{
	$0
}
endsnippet

snippet ci "class implements" b
<?php
namespace ${1:Vendor};

class `!p snip.rv=snip.basename` implements ${2:ArrayAccess}
{
	$0
}
endsnippet

snippet cl "class" b
<?php
namespace ${1:Vendor};

class `!p snip.rv=snip.basename`
{
	$0
}
endsnippet

snippet /ex/ "extends" r
 extends $0
endsnippet

snippet ie "interface extends" b
<?php
namespace ${1:Vendor};

interface `!p snip.rv=snip.basename` extends ${2:ArrayAccess}
{
	$0
}
endsnippet

snippet /im/ "implements" r
 implements $0
endsnippet

snippet in "interface" b
<?php
namespace ${1:Vendor};

interface `!p snip.rv=snip.basename`
{
	$0
}
endsnippet

snippet tr "trait" b
<?php
namespace ${1:Vendor};

trait `!p snip.rv=snip.basename`
{
	$0
}
endsnippet
