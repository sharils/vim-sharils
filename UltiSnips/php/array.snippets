global !p
import re
def singular(word):
	return re.sub(r'(s|es)$', '', word)
endglobal

snippet acb "array_combine" w
array_combine($1)
endsnippet

snippet ach "array_chunk" w
array_chunk($1)
endsnippet

snippet ack "array_change_key_case" w
array_change_key_case($1)
endsnippet

snippet aco "array_column" w
array_column($1)
endsnippet

snippet acp "compact" w
compact($1)
endsnippet

snippet act "count" w
count($1)
endsnippet

snippet acv "array_count_values" w
array_count_values($1)
endsnippet

snippet adi "array_diff" w
array_diff($1)
endsnippet

snippet adi "array_udiff" w
array_udiff($1)
endsnippet

snippet adi "array_diff_key" w
array_diff_key($1)
endsnippet

snippet adi "array_diff_ukey" w
array_diff_ukey($1)
endsnippet

snippet adi "array_diff_assoc" w
array_diff_assoc($1)
endsnippet

snippet adi "array_udiff_assoc" w
array_udiff_assoc($1)
endsnippet

snippet adi "array_diff_uassoc" w
array_diff_uassoc($1)
endsnippet

snippet adi "array_udiff_uassoc" w
array_udiff_uassoc($1)
endsnippet

snippet aen "end" w
end($1)
endsnippet

snippet aex "extract" w
extract($1)
endsnippet

snippet afi "array_filter" w
array_filter($1)
endsnippet

snippet /(?<=array_filter\()f/ "array_filter function" r
$$1, function ($`!p snip.rv = singular(t[1])`) {
	${2:throw new BadFunctionCallException('TODO');}
}
endsnippet

snippet afil "array_fill" w
array_fill($1)
endsnippet

snippet afk "array_fill_keys" w
array_fill_keys($1)
endsnippet

snippet afl "array_flip" w
array_flip($1)
endsnippet

snippet ain "in_array" w
in_array($1)
endsnippet

snippet ais "array_intersect" w
array_intersect($1)
endsnippet

snippet ais "array_uintersect" w
array_uintersect($1)
endsnippet

snippet ais "array_intersect_key" w
array_intersect_key($1)
endsnippet

snippet ais "array_intersect_ukey" w
array_intersect_ukey($1)
endsnippet

snippet ais "array_intersect_assoc" w
array_intersect_assoc($1)
endsnippet

snippet ais "array_uintersect_assoc" w
array_uintersect_assoc($1)
endsnippet

snippet ais "array_intersect_uassoc" w
array_intersect_uassoc($1)
endsnippet

snippet ais "array_uintersect_uassoc" w
array_uintersect_uassoc($1)
endsnippet

snippet ake "array_key_exists" w
array_key_exists('$1', $$2)
endsnippet

snippet aks "array_keys" w
array_keys($1)
endsnippet

snippet ama "array_map" w
array_map($1)
endsnippet

snippet ame "array_merge" w
array_merge($1)
endsnippet

snippet amr "array_merge_recursive" w
array_merge_recursive($1)
endsnippet

snippet apa "array_pad" w
array_pad($1)
endsnippet

snippet apo "array_pop" w
array_pop($1)
endsnippet

snippet apr "array_product" w
array_product($1)
endsnippet

snippet apu "array_push" w
array_push($1)
endsnippet

snippet ara "array_rand" w
array_rand($1)
endsnippet

snippet ard "array_reduce" w
array_reduce($1)
endsnippet

snippet arg "range" w
range($1)
endsnippet

snippet array_map( "array_map function" w
array_map(function ($`!p snip.rv = singular(t[1])`) {
	${2:throw new BadFunctionCallException('TODO');}
}, $$1
endsnippet

snippet array_reduce( "array_reduce function" w
array_reduce($$1, function ($result, $`!p snip.rv = singular(t[1])`) {
	${2:throw new BadFunctionCallException('TODO');}
}
endsnippet

snippet array_walk( "array_walk function" w
array_walk($$1, function (&$`!p snip.rv = singular(t[1])`) {
	${2:throw new BadFunctionCallException('TODO');}
}
endsnippet

snippet arp "array_replace" w
array_replace($1)
endsnippet

snippet arr "array_replace_recursive" w
array_replace_recursive($1)
endsnippet

snippet ars "reset" w
reset($1)
endsnippet

snippet arv "array_reverse" w
array_reverse($1)
endsnippet

snippet ase "array_search" w
array_search($1)
endsnippet

snippet ash "array_shift" w
array_shift($1)
endsnippet

snippet asl "array_slice" w
array_slice($1)
endsnippet

snippet aso "sort" w
sort($1)
endsnippet

snippet aso "rsort" w
rsort($1)
endsnippet

snippet aso "usort" w
usort($1)
endsnippet

snippet aso "ksort" w
ksort($1)
endsnippet

snippet aso "krsort" w
krsort($1)
endsnippet

snippet aso "uksort" w
uksort($1)
endsnippet

snippet aso "asort" w
asort($1)
endsnippet

snippet aso "arsort" w
arsort($1)
endsnippet

snippet aso "uasort" w
uasort($1)
endsnippet

snippet aso "natcasesort" w
natcasesort($1)
endsnippet

snippet aso "natsort" w
natsort($1)
endsnippet

snippet aso "array_multisort" w
array_multisort($1)
endsnippet

snippet aso "shuffle" w
shuffle($1)
endsnippet

snippet asp "array_splice" w
array_splice($1)
endsnippet

snippet asu "array_sum" w
array_sum($1)
endsnippet

snippet aun "array_unique" w
array_unique($1)
endsnippet

snippet aus "array_unshift" w
array_unshift($1)
endsnippet

snippet ava "array_values" w
array_values($1)
endsnippet

snippet awa "array_walk" w
array_walk($1)
endsnippet

snippet awr "array_walk_recursive" w
array_walk_recursive($1)
endsnippet

snippet uasort( "uasort function" w
uasort($$1, function ($low, $high) {
	${2:throw new BadFunctionCallException('TODO');}
}
endsnippet

snippet uksort( "uksort function" w
uksort($$1, function ($low, $high) {
	${2:throw new BadFunctionCallException('TODO');}
}
endsnippet

snippet usort( "usort function" w
usort($$1, function ($low, $high) {
	${2:throw new BadFunctionCallException('TODO');}
}
endsnippet
